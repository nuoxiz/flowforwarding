# Defines a small topology of 3 routers, 5 networks and 2 endpoints
# docker compose -f compose.yaml --profile routers up -d
# docker compose -f compose.yaml --profile endpoints --profile routers up -d
# docker compose -f compose.yaml --profile routers --profile endpoints down -t 1
services:
  # 3 routers connecting networks
  router1:
    profiles: ["routers"]
    container_name: router1
    image: "pycimage"
    build: .
    volumes:
      - .:/compnets
    command: python3 router.py router1
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router1
    networks:
      - stub1
      - trans1
      - stub3

  router2:
    profiles: ["routers"]
    container_name: router2
    image: "pycimage"
    build: .
    volumes:
      - .:/compnets
    command: python3 router.py router2
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router2
    networks:
      - trans1
      - trans2

  router3:
    profiles: ["routers"]
    container_name: router3
    image: "pycimage"
    build: .
    volumes:
      - .:/compnets
    command: python3 router.py router3
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router3
    networks:
      - stub2
      - trans2

  # router4:
  #   profiles: ["routers"]
  #   container_name: router4
  #   image: "pycimage"
  #   build: .
  #   volumes:
  #     - .:/compnets
  #   command: python3 router.py router4
  #   stdin_open: true
  #   tty: true
  #   environment:
  #     HOSTNAME: router4
  #   networks:
  #     - trans3

  # 2 endpoints creating traffic
  endpoint1:
    profiles: ["endpoints"]
    container_name: endpoint1
    image: "pycimage"
    build: .
    volumes:
      - .:/compnets
    command: python3 endpoint.py router1 1 endpoint1
    stdin_open: true
    tty: true
    depends_on:
      - router1
    environment:
      HOSTNAME: endpoint1
    networks:
      - stub1

  endpoint2:
    profiles: ["endpoints"]
    container_name: endpoint2
    image: "pycimage"
    build: .
    volumes:
      - .:/compnets
    command: python3 endpoint.py router3 0 endpoint2
    stdin_open: true
    tty: true
    depends_on:
      - router3
    environment:
      HOSTNAME: endpoint2
    networks:
      - stub2

  endpoint3:
    profiles: ["endpoints"]
    container_name: endpoint3
    image: "pycimage"
    build: .
    volumes:
      - .:/compnets
    command: python3 endpoint.py router3 0 endpoint3
    stdin_open: true
    tty: true
    depends_on:
      - router3
    environment:
      HOSTNAME: endpoint3
    networks:
      - stub2

  endpoint4:
    profiles: ["endpoints"]
    container_name: endpoint4
    image: "pycimage"
    build: .
    volumes:
      - .:/compnets
    command: python3 endpoint.py router1 1 endpoint4
    stdin_open: true
    tty: true
    depends_on:
      - router1
    environment:
      HOSTNAME: endpoint4
    networks:
      - stub3
  

# 2 edge networks and 3 access networks
networks:
  stub1:
    # name: stub1
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
  stub2:
    # name: stub2
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24

  stub3:
    # name: stub2
    ipam:
      driver: default
      config:
        - subnet: 192.168.20.0/24
  
  trans1:
    # name: trans1
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/24
  trans2:
    # name: trans2
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/24
  trans3:
    # name: trans3
    ipam:
      driver: default
      config:
        - subnet: 172.23.0.0/24
